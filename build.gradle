plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.2'
	id 'io.spring.dependency-management' version '1.1.0'
	id 'jacoco'
	id "org.sonarqube" version "3.5.0.2730"

}

jacoco {
	toolVersion = "0.8.8"
}

jacocoTestReport {
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/reports/jacocoHtml")
	}
}

test {
	jacoco {
		destinationFile = file("$buildDir/jacoco/jacocoTest.exec")
		includes= ["com.arc_e_tect.*"]
		classDumpDir = file("$buildDir/jacoco/classpathdumps")
	}
}

group = 'com.trevnu'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '17'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	runtimeOnly 'com.mysql:mysql-connector-j'
	annotationProcessor 'org.projectlombok:lombok'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	annotationProcessor 'org.projectlombok:lombok-mapstruct-binding:0.2.0'
	implementation 'org.mapstruct:mapstruct:1.5.3.Final'
	annotationProcessor 'org.mapstruct:mapstruct-processor:1.5.3.Final'
	testImplementation 'org.springframework.boot:spring-boot-starter-aop'
}

tasks.named('test') {
	useJUnitPlatform()
}

sonarqube {
	properties {
		property "sonar.projectKey", "hd3vC0_prueba-transacciones"
		property "sonar.organization", "hd3vc0"
		property "sonar.host.url", "https://sonarcloud.io"
	}
}
